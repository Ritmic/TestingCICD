name: production-release
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checking out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get tags test
        uses: paulhatch/semantic-version@v5.0.2
        id: tag
        with:
          # The prefix to use to identify tags
          # A string which, if present in a git commit, indicates that a change represents a
          # major (breaking) change, supports regular expressions wrapped with '/'
          major_pattern: "(MAJOR)"
          # A string which indicates the flags used by the `major_pattern` regular expression. Supported flags: idgs
          major_regexp_flags: ""
          # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
          minor_pattern: "(MINOR)"
          # A string which indicates the flags used by the `minor_pattern` regular expression. Supported flags: idgs
          minor_regexp_flags: ""
          # A string to determine the format of the version output
          version_format: "${major}.${minor}.${patch}-alpha${increment}"
          # If this is set to true, *every* commit will be treated as a new version.
          bump_each_commit: false
          # If true, the body of commits will also be searched for major/minor patterns to determine the version type.
          search_commit_body: false
          # The output method used to generate list of users, 'csv' or 'json'.
          user_format_type: "csv"
      - name: Checkout files
        uses: Bhacaz/checkout-files@v2
        with:
          token: ${{secrets.ACCESS_TOKEN}}
          #Checkout single file 
          files: file.txt
      - name: Test Checkout
        run: "ls"
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          token:  ${{secrets.ACCESS_TOKEN}}
          tag: ${{ steps.tag.outputs.version_tag }}
          name: Release ${{ steps.tag.outputs.version}}
      - name: Auto-generate CHANGELOG
        uses: BobAnkh/auto-generate-changelog@v1.2.4
        with:
          REPO_NAME: 'Ritmic/TestingCICD'
          ACCESS_TOKEN:  ${{secrets.ACCESS_TOKEN}}
          PATH: 'CHANGELOG.md'
          COMMIT_MESSAGE: 'docs(CHANGELOG): update release notes'
          TYPE: 'feat:Feature,fix:Bug Fixes,docs:Documentation,refactor:Refactor,perf:Performance Improvements'
